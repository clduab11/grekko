# Istio Service Mesh Configuration for Trading System
# Provides mTLS, traffic management, and security policies

# Istio Installation Configuration
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: trading-system-istio
  namespace: istio-system
spec:
  values:
    global:
      meshID: trading-mesh
      multiCluster:
        clusterName: grekko-trading-prod
      network: trading-network
    pilot:
      env:
        EXTERNAL_ISTIOD: false
  components:
    pilot:
      k8s:
        resources:
          requests:
            cpu: 500m
            memory: 2048Mi
          limits:
            cpu: 1000m
            memory: 4096Mi
        hpaSpec:
          minReplicas: 2
          maxReplicas: 5
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        hpaSpec:
          minReplicas: 2
          maxReplicas: 5
        service:
          type: LoadBalancer
          ports:
          - port: 15021
            targetPort: 15021
            name: status-port
          - port: 80
            targetPort: 8080
            name: http2
          - port: 443
            targetPort: 8443
            name: https
---
# Namespace Configuration with Istio Injection
apiVersion: v1
kind: Namespace
metadata:
  name: trading-prod
  labels:
    istio-injection: enabled
    name: trading-prod
---
apiVersion: v1
kind: Namespace
metadata:
  name: trading-staging
  labels:
    istio-injection: enabled
    name: trading-staging
---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
  labels:
    istio-injection: enabled
    name: monitoring
---
# Peer Authentication - Enable mTLS for all services
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: trading-prod
spec:
  mtls:
    mode: STRICT
---
# Authorization Policy - Default deny all
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: deny-all
  namespace: trading-prod
spec:
  {}
---
# Authorization Policy - Allow trading services communication
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: allow-trading-services
  namespace: trading-prod
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: trading-system
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/trading-prod/sa/trading-service-account"]
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
  - to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
---
# Gateway Configuration for External Access
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: trading-gateway
  namespace: trading-prod
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: trading-tls-secret
    hosts:
    - "api.grekko.trading"
    - "trading.grekko.com"
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "api.grekko.trading"
    - "trading.grekko.com"
    tls:
      httpsRedirect: true
---
# Virtual Service for Trading API Routes
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: trading-services
  namespace: trading-prod
spec:
  hosts:
  - "api.grekko.trading"
  - "trading.grekko.com"
  gateways:
  - trading-gateway
  http:
  # Agent Coordination Service Routes
  - match:
    - uri:
        prefix: "/v1/coordination"
    route:
    - destination:
        host: agent-coordination
        port:
          number: 8080
    timeout: 5s
    retries:
      attempts: 3
      perTryTimeout: 2s
      retryOn: 5xx,reset,connect-failure,refused-stream
  # Risk Management Service Routes
  - match:
    - uri:
        prefix: "/v1/risk"
    route:
    - destination:
        host: risk-management
        port:
          number: 8080
    timeout: 2s
    retries:
      attempts: 2
      perTryTimeout: 1s
      retryOn: 5xx,reset,connect-failure,refused-stream
  # Execution Engine Routes
  - match:
    - uri:
        prefix: "/v1/execution"
    route:
    - destination:
        host: execution-engine
        port:
          number: 8080
    timeout: 3s
    retries:
      attempts: 3
      perTryTimeout: 1s
      retryOn: 5xx,reset,connect-failure,refused-stream
  # Data Ingestion Routes
  - match:
    - uri:
        prefix: "/v1/data"
    route:
    - destination:
        host: data-ingestion
        port:
          number: 8080
    timeout: 1s
    retries:
      attempts: 2
      perTryTimeout: 500ms
      retryOn: 5xx,reset,connect-failure,refused-stream
  # Strategy Engine Routes
  - match:
    - uri:
        prefix: "/v1/strategy"
    route:
    - destination:
        host: strategy-engine
        port:
          number: 8080
    timeout: 3s
    retries:
      attempts: 2
      perTryTimeout: 1s
      retryOn: 5xx,reset,connect-failure,refused-stream
  # MCP Integration Routes
  - match:
    - uri:
        prefix: "/v1/mcp"
    route:
    - destination:
        host: mcp-integration
        port:
          number: 8080
    timeout: 10s
    retries:
      attempts: 2
      perTryTimeout: 5s
      retryOn: 5xx,reset,connect-failure,refused-stream
  # Wallet Management Routes
  - match:
    - uri:
        prefix: "/v1/wallet"
    route:
    - destination:
        host: wallet-management
        port:
          number: 8080
    timeout: 5s
    retries:
      attempts: 2
      perTryTimeout: 2s
      retryOn: 5xx,reset,connect-failure,refused-stream
  # Monitoring Routes
  - match:
    - uri:
        prefix: "/v1/monitoring"
    route:
    - destination:
        host: monitoring-service
        port:
          number: 8080
    timeout: 2s
    retries:
      attempts: 1
      perTryTimeout: 1s
      retryOn: 5xx,reset,connect-failure,refused-stream
---
# Destination Rules for Circuit Breaker and Load Balancing
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: trading-services-dr
  namespace: trading-prod
spec:
  host: "*.trading-prod.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30s
        keepAlive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 100
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        h2UpgradePolicy: UPGRADE
    circuitBreaker:
      consecutiveGatewayErrors: 3
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 30
    loadBalancer:
      simple: LEAST_CONN
  portLevelSettings:
  - port:
      number: 8080
    connectionPool:
      tcp:
        maxConnections: 50
      http:
        http1MaxPendingRequests: 25
        maxRequestsPerConnection: 5
---
# Service Entry for External APIs
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: coinbase-api
  namespace: trading-prod
spec:
  hosts:
  - api.coinbase.com
  - api.pro.coinbase.com
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  location: MESH_EXTERNAL
  resolution: DNS
---
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: binance-api
  namespace: trading-prod
spec:
  hosts:
  - api.binance.com
  - api.binance.us
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  location: MESH_EXTERNAL
  resolution: DNS
---
# Telemetry Configuration for Observability
apiVersion: telemetry.istio.io/v1alpha1
kind: Telemetry
metadata:
  name: trading-metrics
  namespace: trading-prod
spec:
  metrics:
  - providers:
    - name: prometheus
  - overrides:
    - match:
        metric: ALL_METRICS
      tagOverrides:
        request_protocol:
          value: "http"
    - match:
        metric: REQUEST_COUNT
      disabled: false
    - match:
        metric: REQUEST_DURATION
      disabled: false
    - match:
        metric: REQUEST_SIZE
      disabled: false
    - match:
        metric: RESPONSE_SIZE
      disabled: false
---
# Request Authentication for JWT validation
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: trading-jwt
  namespace: trading-prod
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: trading-system
  jwtRules:
  - issuer: "https://auth.grekko.trading"
    jwksUri: "https://auth.grekko.trading/.well-known/jwks.json"
    audiences:
    - "trading-api"
    forwardOriginalToken: true
---
# Service Monitor for Prometheus Integration
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: istio-mesh
  namespace: monitoring
  labels:
    app: istio-proxy
spec:
  selector:
    matchLabels:
      app: istio-proxy
  endpoints:
  - port: http-monitoring
    interval: 15s
    path: /stats/prometheus