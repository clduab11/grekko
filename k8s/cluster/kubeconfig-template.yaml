# Kubeconfig Template for Grekko Trading Production Cluster
# 
# SECURITY WARNING: This is a template file with placeholder values.
# DO NOT commit actual credentials to version control.
# 
# Instructions:
# 1. Copy this file to ~/.kube/config
# 2. Replace all placeholder values with actual cluster credentials
# 3. Set proper file permissions: chmod 600 ~/.kube/config
# 4. Verify connection: kubectl cluster-info

apiVersion: v1
kind: Config
preferences: {}

# Cluster Configuration
clusters:
- cluster:
    # Replace with actual base64-encoded cluster CA certificate
    certificate-authority-data: <BASE64_CLUSTER_CA_CERTIFICATE>
    # Replace with actual API server endpoint
    server: https://api.grekko-trading-prod.example.com:6443
  name: grekko-trading-prod

# User Authentication Configuration
users:
- name: grekko-admin
  user:
    # Option 1: Certificate-based authentication (recommended for long-term access)
    client-certificate-data: <BASE64_CLIENT_CERTIFICATE>
    client-key-data: <BASE64_CLIENT_PRIVATE_KEY>
    
    # Option 2: Token-based authentication (recommended for service accounts)
    # Uncomment the line below and comment out the certificate lines above
    # token: <SERVICE_ACCOUNT_TOKEN>

# Context Configuration
contexts:
- context:
    cluster: grekko-trading-prod
    namespace: trading-prod  # Default namespace for trading operations
    user: grekko-admin
  name: grekko-trading-prod

# Set default context
current-context: grekko-trading-prod

---
# Alternative configuration for monitoring access
# Uncomment and configure if you need separate monitoring context

# apiVersion: v1
# kind: Config
# preferences: {}
# 
# clusters:
# - cluster:
#     certificate-authority-data: <BASE64_CLUSTER_CA_CERTIFICATE>
#     server: https://api.grekko-trading-prod.example.com:6443
#   name: grekko-trading-prod
# 
# users:
# - name: monitoring-user
#   user:
#     token: <MONITORING_SERVICE_ACCOUNT_TOKEN>
# 
# contexts:
# - context:
#     cluster: grekko-trading-prod
#     namespace: monitoring
#     user: monitoring-user
#   name: grekko-monitoring
# 
# current-context: grekko-monitoring

---
# Example RBAC configuration for deployment monitoring
# Apply this to create a service account with appropriate permissions

apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployment-monitor
  namespace: trading-prod
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deployment-monitor
rules:
# Pod and service monitoring
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "nodes"]
  verbs: ["get", "list", "watch"]

# Deployment and replica set monitoring
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["get", "list", "watch"]

# Log access
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]

# Metrics access
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

# ConfigMap and Secret read access (limited)
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
  resourceNames: ["cluster-config", "node-affinity-config"]

# Namespace access
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]

# Event monitoring
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]

# HPA monitoring
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch"]

# Network policy monitoring
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deployment-monitor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deployment-monitor
subjects:
- kind: ServiceAccount
  name: deployment-monitor
  namespace: trading-prod

---
# Additional monitoring namespace access
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: monitoring
  name: monitoring-reader
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: monitoring-reader
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: deployment-monitor
  namespace: trading-prod
roleRef:
  kind: Role
  name: monitoring-reader
  apiGroup: rbac.authorization.k8s.io